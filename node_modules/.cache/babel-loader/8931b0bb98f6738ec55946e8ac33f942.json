{"ast":null,"code":"var _jsxFileName = \"/home/sheethal/mearn/projfontend/src/user/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup } from '../auth/helper';\nimport Base from '../core/Base';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [values, setVAlues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    success: false\n  }); //destructure array \n\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values; //setting values\n\n  const handleChange = name => event => {\n    setVAlues({ ...values,\n      error: false,\n      [name]: event.target.value\n    });\n  }; //onsubmit click\n\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setVAlues({ ...values,\n      error: false\n    });\n    signup({\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setVAlues({ ...values,\n          error: data.error,\n          success: false\n        });\n      } else {\n        setVAlues({ ...values,\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          error: \"\",\n          success: true\n        }); //setting values so that after submission form values should be empty\n      }\n    }).catch(console.log(\"Error in signup\"));\n  }; //signupform component\n\n\n  const signUpForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: handleChange(\"name\"),\n              type: \"text\",\n              value: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light mt-2\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: handleChange(\"email\"),\n              type: \"email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light mt-2\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: handleChange(\"password\"),\n              type: \"password\",\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            className: \"btn btn-block btn-success mt-3\",\n            style: {\n              width: \"100%\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }; //display and conditions after hitting submit \n\n\n  const successMassage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" alert alert-success\",\n      style: {\n        display: success ? \"\" : \"none\"\n      },\n      children: [\"New accout was created successfully . Please \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 54\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }; //error massage after submit\n\n\n  const errorMassage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"sign up\",\n    description: \"page for sign-up!\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center\",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }, this), successMassage(), errorMassage(), signUpForm()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"fS9UUmQQMOivZIhAGbQiv3fHB9E=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/sheethal/mearn/projfontend/src/user/Signup.js"],"names":["React","useState","Link","signup","Base","Signup","values","setVAlues","name","email","password","error","success","handleChange","event","target","value","onSubmit","preventDefault","then","data","catch","console","log","signUpForm","width","successMassage","display","errorMassage","JSON","stringify"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { signup } from '../auth/helper';\nimport Base from '../core/Base';\n\n\n\nconst Signup = () =>{\n\n    const  [values,setVAlues] = useState({\n        name:\"\",\n        email:\"\",\n        password:\"\",\n        error:\"\",\n        success:false\n    });\n\n    //destructure array \n    const {name,email,password,error,success} =values\n\n//setting values\n    const handleChange = name => event =>{\n        setVAlues({...values , error:false , [name] : event.target.value})\n    };\n\n    //onsubmit click\n    const onSubmit = event => {\n        event.preventDefault()\n        setVAlues ({...values , error:false})\n        signup({name,email,password})\n        .then( data => {\n            if(data.error){\n                setVAlues({...values, error:data.error , success:false})\n            }\n            else{\n                setVAlues({...values , \n                    name:\"\" ,\n                    email:\"\",\n                    password:\"\",\n                    error:\"\",\n                    success:true\n                }) //setting values so that after submission form values should be empty\n            }\n        })\n        .catch(console.log(\"Error in signup\"))\n    }\n\n//signupform component\n    const signUpForm = () =>{\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-sm-3 text-left\">\n                  <form>\n                    <div className=\"form-group\">\n                      <label className=\"text-light\">Name</label>\n                      <input className=\"form-control\" \n                      onChange={handleChange(\"name\")} \n                      type=\"text\" value={name}/>\n                     </div>\n\n                     <div className=\"form-group\">\n                      <label className=\"text-light mt-2\">Email</label>\n                      <input className=\"form-control\" \n                      onChange={handleChange(\"email\")}\n                      type=\"email\" value={email}/>\n                     </div>\n\n                     <div className=\"form-group\">\n                      <label className=\"text-light mt-2\">Password</label>\n                      <input className=\"form-control\" \n                      onChange={handleChange(\"password\")}\n                      type=\"password\" value={password} />\n                     </div>\n\n                     <button  onClick={onSubmit} className=\"btn btn-block btn-success mt-3\" style={{width:\"100%\"}}>Submit</button>\n\n                  </form>\n\n                </div>\n            </div>\n        )\n    };\n\n//display and conditions after hitting submit \nconst successMassage = () => {\n    return (<div className =\" alert alert-success\" style={{display:success ? \"\" : \"none\"}}>\n        New accout was created successfully . Please <Link to=\"/signin\">Login here</Link>\n    </div>)\n};\n//error massage after submit\nconst errorMassage = () => {\n    return ( <div className =\" alert alert-danger\" style={{display:error ? \"\" : \"none\"}}>\n     {error}\n    </div>)\n};\n\n\n    return (\n        <Base title=\"sign up\" description =\"page for sign-up!\">\n       <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\n       {successMassage()}\n       {errorMassage()}\n        {signUpForm()}\n        </Base>\n    );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}