{"ast":null,"code":"var _jsxFileName = \"/home/sheethal/mearn/projfontend/src/user/Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Base from '../core/Base';\nimport { sigin, authenticate, isAuthenticated } from \"../auth/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst signin = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n    error: \"\",\n    loading: false,\n    didRedirect: false\n  }); // destructure \n\n  const {\n    email,\n    password,\n    error,\n    loading,\n    didRedirect\n  } = values; //getting user from authentication\n\n  const {\n    user\n  } = isAuthenticated(); //handling on change  values\n\n  const handleChange = name => event => {\n    return setValues({ ...values,\n      error: false,\n      [email]: event.target.value\n    });\n  }; //on submit \n\n\n  const onSubmit = () => {\n    Event.preventDefault();\n    setValues({ ...values,\n      error: false,\n      loading: true\n    });\n    sigin({\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error,\n          loading: false\n        });\n      } else {\n        authenticate(data, () => {\n          setValues({ ...values,\n            didRedirect: true\n          });\n        });\n      }\n    }).catch(console.log(\"sign-in request failed or database preblem\"));\n  }; //jusdging method so  should we have to redirect or not \n\n\n  const performRedirect = () => {\n    if (didRedirect) {\n      if (user && user.role === 1) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"redirect to admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this); //to admin page\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"redirect to user dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this); //to user page\n      }\n    }\n\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this);\n    }\n  }; //display and conditions after hitting submit \n\n\n  const loadingMassage = () => {\n    return loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this);\n  }; //error massage after submit\n\n\n  const errorMassage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" alert alert-danger\",\n          style: {\n            display: error ? \"\" : \"none\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this);\n  };\n\n  const signInForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-sm-3 text-left\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light mt-2\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange(\"email\"),\n              className: \"form-control\",\n              type: \"email\",\n              value: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-light mt-2\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleChange(\"password\"),\n              className: \"form-control\",\n              type: \"password\",\n              value: password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSubmit,\n            className: \"btn btn-block btn-success mt-3\",\n            style: {\n              width: \"100%\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Base, {\n    title: \"sign in page\",\n    description: \"page for sign-in!\",\n    children: [loadingMassage(), errorMassage(), signInForm(), performRedirect(), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white text-center \",\n      children: JSON.stringify(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(signin, \"ufwscZBCnqfpZwkrBtUTjUgTlVI=\");\n\nexport default signin;","map":{"version":3,"sources":["/home/sheethal/mearn/projfontend/src/user/Signin.js"],"names":["React","useState","Link","Redirect","Base","sigin","authenticate","isAuthenticated","signin","values","setValues","email","password","error","loading","didRedirect","user","handleChange","name","event","target","value","onSubmit","Event","preventDefault","then","data","catch","console","log","performRedirect","role","loadingMassage","errorMassage","display","signInForm","width","JSON","stringify"],"mappings":"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","sourcesContent":["import React , {useState} from 'react';\nimport { Link , Redirect} from 'react-router-dom';\nimport Base from '../core/Base';\n\nimport {sigin ,authenticate, isAuthenticated } from \"../auth/helper\"\n\n\nconst signin = () =>{\n\n    const [values , setValues] = useState({\n        email:\"\",\n        password:\"\",\n        error:\"\",\n        loading:false,\n        didRedirect:false\n    })\n\n    // destructure \n    const {email , password,error , loading ,didRedirect} = values\n    //getting user from authentication\n    const {user} = isAuthenticated();\n\n    //handling on change  values\n    const handleChange = name => event =>{\n        return(\n        setValues({...values , error:false , [email] : event.target.value}))\n    };\n//on submit \n\n    const onSubmit = () => {\n        Event.preventDefault();\n        setValues({...values , error:false , loading:true})\n        sigin({email,password})\n        .then(data => {\n            if(data.error){\n                setValues({...values , error:data.error , loading:false})\n            }else{\n                authenticate(data , () => {\n                    setValues({...values , didRedirect:true})\n                })\n            }\n        })\n        .catch(console.log(\"sign-in request failed or database preblem\"))\n    }\n\n    //jusdging method so  should we have to redirect or not \n    const performRedirect = () =>{\n        if(didRedirect){\n             \n             if(user && user.role === 1){\n                  return <p>redirect to admin</p>;//to admin page\n             }else {\n                   return <p>redirect to user dashboard</p>;//to user page\n             }  \n         }\n         if(isAuthenticated){\n             return <Redirect  to=\"/\" />;\n         }\n    };\n    \n    //display and conditions after hitting submit \nconst loadingMassage = () => {\nreturn(\n    loading && (\n        <div className=\"alert alert-info\">\n            <h2>Loading...</h2>\n        </div>\n    )\n  );\n};\n\n//error massage after submit\nconst errorMassage = () => {\n    return (\n        <div className=\"row\"> \n            <div className=\"col-md-6 offset-sm-3 text-left\">          \n                <div className =\" alert alert-danger\" style={{display:error ? \"\" : \"none\"}}>\n                           {error}\n                </div>\n            </div>\n        </div>\n     )\n};\n\n\n    const signInForm = () =>{\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-sm-3 text-left\">\n                  <form>\n                     <div className=\"form-group\">\n                      <label className=\"text-light mt-2\">Email</label>\n                      <input  onChange={handleChange(\"email\")} className=\"form-control\" type=\"email\" value={email}/>\n                     </div>\n\n                     <div className=\"form-group\">\n                      <label className=\"text-light mt-2\">Password</label>\n                      <input onChange={handleChange(\"password\")} className=\"form-control\" type=\"password\" value={password}/>\n                     </div>\n\n                     <button onClick={onSubmit} className=\"btn btn-block btn-success mt-3\" style={{width:\"100%\"}}>Submit</button>\n\n                  </form>\n\n                </div>\n            </div>\n        )\n    }\n\n\n\n    return (\n        <Base title=\"sign in page\" description =\"page for sign-in!\">\n\n        {loadingMassage()}\n        {errorMassage()}\n        {signInForm()}\n        {performRedirect()}\n    <p className=\"text-white text-center \">{JSON.stringify(values)}</p>\n        </Base>\n    );\n\n};\n\nexport default signin;\n"]},"metadata":{},"sourceType":"module"}