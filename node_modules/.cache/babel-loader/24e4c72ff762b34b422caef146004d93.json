{"ast":null,"code":"import { API } from \"../../backend\"; //createing category\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category) //backend accept json in string format so stringify\n\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all categories  (because every product need category so we can handle them easily)\n\nexport const getAllCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get a single category\n\nexport const getCategory = categoryId => {\n  return fetch(`${API}category/${categoryId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete product\n\nexport const deleteCategory = (categoryId, userId, token) => {\n  return fetch(`${API}category/${categoryId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update category \n\nexport const updateCategory = (categoryId, userId, token, category) => {\n  return fetch(`${API}category/update/${categoryId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: category,\n    userId\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //products calls\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all the products\n\nexport const getAllProducts = () => {\n  return fetch(`${API}product`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get a single product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product,\n    userId\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a product \n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/sheethal/mearn/projfontend/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getAllCategories","getCategory","categoryId","deleteCategory","updateCategory","createProduct","product","getAllProducts","getProduct","productId","updateProduct","deleteProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\n\n\n//createing category\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category) //backend accept json in string format so stringify\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//get all categories  (because every product need category so we can handle them easily)\n     \nexport const getAllCategories = () => {\n    return fetch(`${API}/categories` , {\n        method : \"GET\",\n    }).then(response => {\n        return response.json();\n         })\n    .catch(err => console.log(err));\n}\n\n     //get a single category\n     export const getCategory = categoryId => {\n    return fetch(`${API}category/${categoryId}` , {\n      method:\"GET\"\n  }).then(response => {\n    return response.json();\n     })\n.catch(err => console.log(err));\n}\n    //delete product\n    export const deleteCategory = (categoryId,userId , token ) => {\n      return fetch(`${API}category/${categoryId}/${userId}` , {\n          method : \"DELETE\",\n          headers:{\n              Accept:\"application/json\",\n              Authorization: `Bearer ${token}`}\n             }) \n          .then(response => \n             {\n               return response.json();\n              })\n          .catch(err => console.log(err));\n  }\n    //update category \n    export const updateCategory= (categoryId,userId , token , category) => {\n      return fetch(`${API}category/update/${categoryId}/${userId}` , {\n          method : \"PUT\",\n          headers:{\n              Accept:\"application/json\",\n              Authorization: `Bearer ${token}`\n          },\n          body: category,userId\n      }) .then(response => {\n          return response.json();\n      })\n          .catch(err => console.log(err));\n  }\n\n\n\n//products calls\n\nexport const createProduct = (userId , token , product) => {\n    return fetch(`${API}/product/create/${userId}` , {\n        method : \"POST\",\n        headers:{\n            Accept:\"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product\n    }) .then(response => {\n        return response.json();\n    })\n        .catch(err => console.log(err));}\n\n//get all the products\nexport const getAllProducts = () => {\n    return fetch(`${API}product`, {\n      method: \"GET\"\n    })\n      .then(response => {\n        return response.json();\n\n      })\n      .catch(err => console.log(err));\n  };\n\n\n \n//get a single product\nexport const getProduct = productId => {\n    return fetch(`${API}/product/${productId}` , {\n        method:\"GET\"\n    }).then(response => {\n      return response.json();\n       })\n  .catch(err => console.log(err));\n}\n\n//update a product\n\nexport const updateProduct = (productId,userId , token , product) => {\n    return fetch(`${API}product/${productId}/${userId}` , {\n        method : \"PUT\",\n        headers:{\n            Accept:\"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: product,userId\n    }) .then(response => {\n        return response.json();\n    })\n        .catch(err => console.log(err));\n}\n\n//delete a product \nexport const deleteProduct = (productId,userId , token ) => {\n    return fetch(`${API}product/${productId}/${userId}` , {\n        method : \"DELETE\",\n        headers:{\n            Accept:\"application/json\",\n            Authorization: `Bearer ${token}`}\n           }) \n        .then(response => \n           {\n             return response.json();\n            })\n        .catch(err => console.log(err));\n}\n"]},"metadata":{},"sourceType":"module"}